tep-test.loader.alphabet=0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
tep-test.loader.gap-likelihood=0.01
tep-test.loader.gap-max-size=1000
tep-test.loader.number=10000
tep-test.loader.batch-size=100
tep-test.loader.seed=1234567890

# Setting this to either 'create-drop' or 'none' will also be picked up programmatically by our JDBC code.
spring.jpa.hibernate.ddl-auto=create-drop

# Using the below naming strategies ensures that the default JDBC and JPA schemas for Axon become more similar,
# making it easier to write the rest of the code in a generic way.
#
# Note that the schemas still wouldn't be identical, the JPA default one uses a Sequence for generate
# global sequence numbers, wheres the JDBC default uses an auto-increment column.
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl

